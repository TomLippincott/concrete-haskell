name: concrete-haskell
version: '0.1.0.8'
synopsis: Library for the Concrete data format.
description: Concrete is a Thrift-based data specification designed for Natural Language
  Processing (NLP) applications.  This library provides a Haskell interface to code
  generated from the latest release of Concrete.  It also has a number of utilities
  for converting various formats (JSON, CSV, XML, etc) to Concrete Communication objects.
category: Data
author: Thomas Lippincott
maintainer: tom@cs.jhu.edu
copyright: '2017'
license: GPL
homepage: https://github.com/hltcoe
dependencies:
  - base >=4.6 && <5
  - bytestring
  - bzlib
  - containers
  - directory
  - filepath  
  - hashable
  - megaparsec >=5.3.0
  - mtl
  - network ==2.6.3.2
  - optparse-generic ==1.2.2
  - path-io ==1.2.2
  - process
  - QuickCheck
  - scientific
  - tar
  - text
  - thrift ==0.10.0  
  - time
  - unordered-containers
  - uuid
  - vector
  - zip
  - zlib
library:
  source-dirs: src
  default-extensions:
    - RecordWildCards
  exposed-modules:
    - Data.Concrete
    - Data.Concrete.Services.ActiveLearnerClientService    
    - Data.Concrete.Services.ActiveLearnerClientService_Client
    - Data.Concrete.Services.ActiveLearnerClientService_Iface
    - Data.Concrete.Services.ActiveLearnerServerService    
    - Data.Concrete.Services.ActiveLearnerServerService_Client
    - Data.Concrete.Services.ActiveLearnerServerService_Iface
    - Data.Concrete.Services.AnnotateCommunicationService    
    - Data.Concrete.Services.AnnotateCommunicationService_Client
    - Data.Concrete.Services.AnnotateCommunicationService_Iface
    - Data.Concrete.Services.FeedbackService
    - Data.Concrete.Services.FeedbackService_Client
    - Data.Concrete.Services.FeedbackService_Iface
    - Data.Concrete.Services.FetchCommunicationService
    - Data.Concrete.Services.FetchCommunicationService_Client
    - Data.Concrete.Services.FetchCommunicationService_Iface    
    - Data.Concrete.Services.ResultsServerService
    - Data.Concrete.Services.ResultsServerService_Client
    - Data.Concrete.Services.ResultsServerService_Iface
    - Data.Concrete.Services.SearchProxyService
    - Data.Concrete.Services.SearchProxyService_Client
    - Data.Concrete.Services.SearchProxyService_Iface
    - Data.Concrete.Services.SearchService
    - Data.Concrete.Services.SearchService_Client
    - Data.Concrete.Services.SearchService_Iface
    - Data.Concrete.Services.Service
    - Data.Concrete.Services.Service_Client
    - Data.Concrete.Services.Service_Iface    
    - Data.Concrete.Services.StoreCommunicationService
    - Data.Concrete.Services.StoreCommunicationService_Client
    - Data.Concrete.Services.StoreCommunicationService_Iface
    - Data.Concrete.Services.SummarizationService
    - Data.Concrete.Services.SummarizationService_Client
    - Data.Concrete.Services.SummarizationService_Iface    
    - Data.Concrete.Types
    - Data.Concrete.Utils
    - Data.Concrete.Parsers
    - Data.Concrete.Parsers.Types
    - Data.Concrete.Parsers.Utils
    - Data.Concrete.Parsers.JSON
    - Data.Concrete.Parsers.CONLL
    - Data.Concrete.Parsers.Email
    - Data.Concrete.Parsers.XML
    - Data.Concrete.Parsers.CSV
    - Data.Concrete.Parsers.HTML
    - Data.Concrete.Parsers.PTB
    - Data.Concrete.Parsers.RFC2822

executables:
  ingest_communications:
    main: IngestCommunications.hs
    source-dirs: utils
    dependencies:
      - concrete-haskell
  inspect_communications:
    main: InspectCommunication.hs
    source-dirs: utils
    default-extensions:
      - RecordWildCards
    dependencies:
      - concrete-haskell

tests:
  unit_tests:
    main: tests/UnitTests.hs
    dependencies:
      - concrete-haskell

